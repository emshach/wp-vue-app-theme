{"version":3,"sources":["webpack:///./js/components/preview-release/index.js","webpack:///./js/components/preview-release/template.html","webpack:///./js/mixins/media-actions.js"],"names":["template","require","mixins","media_actions","props","data","sstate","store","state","storedPost","stats","my_xp","show","prev","next","wideMode","beforeRouteUpdate","routeEvents","toPreviewRelease","mounted","Object","assign","nextpost","methods","showImg","likePost","dislikePost","favPost","computed","postData","post","title","rendered","img","background_image","fullContent","full_content","promos","id","excerpt","content","concat","promo_reel","episodes","releases","caption","classes","small","length","canWatchNow","episode","user","as","rst","restrictions","admin","public","subscriber","members","logged_in","auth","redirect","sayAction","trans","release_type"],"mappings":"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","file":"5.js","sourcesContent":["import routeEvents from '../../lib/route-events';\nimport store from '../../lib/store';\nimport media_actions from '../../mixins/media-actions';\nexport default {\n  template: require( './template.html' ),\n  mixins: [ media_actions ],\n  props: [ 'post' ],\n  data() {\n    return {\n      sstate: store.state,\n      storedPost: {\n        stats: {},\n        my_xp: {}\n      },\n      show: false,\n      prev: 0,\n      next: 0,\n      wideMode: true\n    };\n  },\n  beforeRouteUpdate: routeEvents.toPreviewRelease,\n  mounted() {\n    this.storedPost = Object.assign( {}, this.sstate.nextpost );\n  },\n  methods: {\n    showImg() {\n      this.show = true;\n    },\n    likePost() {\n    },\n    dislikePost() {\n    },\n    favPost() {\n    }\n  },\n  computed: {\n    postData() {\n      return this.post || this.storedPost;\n    },\n    title() {\n      return this.postData.title && this.postData.title.rendered || '';\n    },\n    img() {\n      return this.postData.background_image || '';\n    },\n    fullContent() {\n      return this.postData.full_content;\n    },\n    promos() {\n      return [{\n        id: this.postData.id,\n        excerpt: { rendered: this.content }\n      }].concat( this.postData.promo_reel || []);\n    },\n    episodes() {\n      return this.postData.releases || [];\n    },\n    content() {\n      return this.postData.content ? this.postData.content.rendered\n         : this.postData.caption ? this.postData.caption.rendered : '';\n    },\n    classes() {\n      return { small: !!this.promos.length };\n    }\n  }\n};\n","module.exports = \"<div :class=\\\"['preview', 'page', postData.release_type]\\\" :key=\\\"postData.id\\\">\\n  <div id=\\\"bg-image-wrapper\\\" :class=\\\"classes\\\">\\n    <transition name=\\\"fade-in\\\" appear>\\n      <img id=\\\"bg-image\\\" :src=\\\"img\\\" :key=\\\"img\\\" @load=\\\"showImg\\\" v-show=\\\"show\\\"/>\\n    </transition>\\n  </div>\\n  <wp-header></wp-header>\\n  <div class=\\\"featured-wrapper\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div :class=\\\"[ 'media-wrapper', 'col-12', wideMode ? '' : 'col-md-8']\\\">\\n          <video v-if=\\\"postData.release_type == 'video'\\\"\\n                 :src=\\\"postData.source_url\\\" class=\\\"media\\\" autoplay controls>\\n            {{ postData.alt_text }}\\n          </video>\\n          <audio v-else-if=\\\"postData.release_type == 'audio'\\\"\\n                 :src=\\\"postData.source_url\\\" class=\\\"media\\\" autoplay controls>\\n            {{ postData.alt_text }}\\n          </audio>\\n          <carousel v-else-if=\\\"postData.release_type == 'gallery'\\\">\\n            <slide v-for=\\\"( slide, index ) in postData.content\\\" :key=\\\"index\\\"></slide>\\n          </carousel>\\n        </div>\\n        <transition name=\\\"fade-in\\\">\\n          <div v-if=\\\"!wideMode\\\" class=\\\"col-12 col-md-4 description\\\">\\n            <div v-html=\\\"content\\\"></div>\\n            <b-btn v-if=\\\"postData.full_content\\n                         && canWatchNow( postData.full_content )\\\"\\n                   variant=\\\"primary\\\" :to=\\\"postData\\\" size=\\\"lg\\\"\\n                   class=\\\"float-right\\\">{{\\n              sayAction( postData.full_content )}} now</b-btn>\\n            <b-btn v-else variant=\\\"warning\\\"\\n                   size=\\\"lg\\\" class=\\\"float-right\\\"\\n                   v-scroll-to=\\\"{ el: 'main', container: '.page',\\n                                x: false, y: true }\\\">\\n              subscribe for full content</b-btn>\\n          </div>\\n        </transition>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <main role=\\\"main\\\">\\n    <h1 class=\\\"title\\\" v-html=\\\"title\\\"></h1>\\n    <transition name=\\\"fade-in\\\">\\n      <section v-if=\\\"wideMode\\\" class=\\\"description\\\">\\n        <div v-html=\\\"content\\\"></div>\\n        <b-btn v-if=\\\"postData.full_content\\n                     && canWatchNow( postData.full_content )\\\"\\n               variant=\\\"primary\\\" :to=\\\"postData\\\" size=\\\"lg\\\"\\n               class=\\\"float-right\\\">{{\\n          sayAction( postData.full_content )}} now</b-btn>\\n        <b-btn v-else variant=\\\"warning\\\"\\n               size=\\\"lg\\\" class=\\\"float-right\\\"\\n               v-scroll-to=\\\"{ el: 'main', container: '.page',\\n                            x: false, y: true }\\\">\\n          subscribe for full content</b-btn>\\n      </section>\\n    </transition>\\n    <section class=\\\"info row\\\">\\n      <div :class=\\\"[ 'views', 'd-flex',\\n                   { active : postData.my_xp.seen }]\\\">\\n        <span class=\\\"dashicons dashicons-visibility\\\"></span>\\n        <span class=\\\"count\\\">{{ postData.stats.views || 0 }}</span>\\n      </div>\\n      <div :class=\\\"[ 'likes',  'd-flex',\\n                   { active: postData.my_xp.like }]\\\"\\n           @click.stop=\\\"likePost\\\">\\n        <span class=\\\"dashicons dashicons-thumbs-up\\\"></span>\\n        <span class=\\\"count\\\">{{ postData.stats.likes || 0 }}</span>\\n      </div>\\n      <div :class=\\\"[ 'dislikes', 'd-flex',\\n                   { active: postData.my_xp.dislike }]\\\"\\n           @click.stop=\\\"dislikePost\\\">\\n        <span class=\\\"dashicons dashicons-thumbs-down\\\"></span>\\n        <span class=\\\"count\\\">{{ postData.stats.dislikes || 0 }}</span>\\n      </div>\\n      <div :class=\\\"[ 'favs', 'd-flex', { active: postData.my_xp.fav }]\\\"\\n           @click.stop=\\\"favPost\\\">\\n        <span class=\\\"dashicons dashicons-star-filled\\\"></span>\\n        <span class=\\\"count\\\">{{ postData.stats.favs || 0 }}</span>\\n      </div>\\n      <div :class=\\\"[ 'comments', 'd-flex',\\n                             { active: postData.my_xp.comment }]\\\">\\n        <span class=\\\"dashicons dashicons-admin-comments\\\"></span>\\n        <span class=\\\"count\\\">{{ postData.stats.comments || 0 }}</span>\\n      </div>\\n    </section>\\n    <!-- TODO: strips for related, series -->\\n    <section class=\\\"description\\\" v-if=\\\"wideMode\\\" v-html=\\\"content\\\"></section>\\n    <section class=\\\"subscriptions\\\">\\n      <subscription-menu :target=\\\"postData.path\\\">\\n        Select one of the subscription plans to see the full content.\\n      </subscription-menu>\\n    </section>\\n  </main>\\n  <wp-footer></wp-footer>\\n</div>\\n\";","import store from '../../lib/store';\nexport default {\n  methods: {\n    canWatchNow ( episode ) {\n      var user = store.state.user;\n      if ( user.as ) {\n        var as  = user.as;\n        var rst = episode.restrictions;\n        if ( as.admin || rst.public )\n          return true;\n        if ( as.subscriber && rst.members )\n          return true;\n        if ( as.logged_in && rst.auth )\n          return true;\n        return false;\n      }\n      return !episode.redirect;\n    },\n    sayAction( episode, trans ) {\n      return ( episode.release_type == 'video' ? 'watch'\n               : episode.release_type == 'audio'\n               ? ( trans ? 'listen to' : 'listen' )\n               : 'see' );\n    }\n  }\n};\n"],"sourceRoot":""}
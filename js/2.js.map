{"version":3,"sources":["webpack:///./js/components/content-section/index.js","webpack:///./js/components/content-section/template.html","webpack:///./js/mixins/media-actions.js"],"names":["template","require","mixins","media_actions","props","title","type","String","default","episodes","Array","showEmpty","Boolean","coming","data","user","store","state","computed","filteredEpisodes","filter","x","canWatchNow","restrictions","show","dateComing","methods","episode","as","rst","admin","public","subscriber","members","logged_in","auth","redirect","needsSubscription","sayAction","trans","release_type"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACe;AACbA,UAAQ,EAAEC,mBAAO,CAAE,sEAAF,CADJ;AAEbC,QAAM,EAAE,CAAEC,6DAAF,CAFK;AAGbC,OAAK,EAAE;AACLC,SAAK,EAAE;AACLC,UAAI,EAAEC,MADD;AAELC,aAAO,EAAE;AAFJ,KADF;AAKLC,YAAQ,EAAE;AACRH,UAAI,EAAEI,KADE;AAERF,aAAO,EAAE;AAAA,eAAM,EAAN;AAAA;AAFD,KALL;AASLG,aAAS,EAAE;AACTL,UAAI,EAAEM,OADG;AAETJ,aAAO,EAAE;AAFA,KATN;AAaLK,UAAM,EAAE;AACNP,UAAI,EAAEC,MADA;AAENC,aAAO,EAAE;AAFH;AAbH,GAHM;AAqBbM,MArBa,kBAqBL;AACN,WAAO;AACLC,UAAI,EAAEC,kDAAK,CAACC,KAAN,CAAYF;AADb,KAAP;AAGD,GAzBY;AA0BbG,UAAQ,EAAE;AACRC,oBADQ,8BACW;AAAA;;AACjB,aAAO,KAAKV,QAAL,CAAcW,MAAd,CAAsB,UAAAC,CAAC;AAAA,eAAI,KAAI,CAACC,WAAL,CAAiBD,CAAjB,KAAuBA,CAAC,CAACE,YAAF,CAAeC,IAA1C;AAAA,OAAvB,CAAP;AACD,KAHO;AAIRC,cAJQ,wBAIK;AACX,aAAO,KAAKZ,MAAL,GAAgB,QAAQ,KAAKA,MAA7B,GAAwC,MAA/C;AACD;AANO,GA1BG;AAkCba,SAAO,EAAE;AACPJ,eADO,uBACOK,OADP,EACiB;AACtB,UAAK,KAAKZ,IAAL,CAAUa,EAAf,EAAoB;AAClB,YAAIA,EAAE,GAAI,KAAKb,IAAL,CAAUa,EAApB;AACA,YAAIC,GAAG,GAAGF,OAAO,CAACJ,YAAlB;AACA,YAAKK,EAAE,CAACE,KAAH,IAAYD,GAAG,CAACE,MAArB,EACE,OAAO,IAAP;AACF,YAAKH,EAAE,CAACI,UAAH,IAAiBH,GAAG,CAACI,OAA1B,EACE,OAAO,IAAP;AACF,YAAKL,EAAE,CAACM,SAAH,IAAgBL,GAAG,CAACM,IAAzB,EACE,OAAO,IAAP;AACF,eAAO,KAAP;AACD;;AACD,aAAO,CAACR,OAAO,CAACS,QAAhB;AACD,KAdM;AAePC,qBAfO,6BAeaV,OAfb,EAeuB;AAC5B,aAASA,OAAO,CAACJ,YAAR,CAAqBU,OAArB,KACK,CAAC,KAAKlB,IAAL,CAAUa,EAAX,IAAiB,CAAC,KAAKb,IAAL,CAAUa,EAAV,CAAaI,UADpC,CAAT;AAED;AAlBM;AAlCI,CAAf,E;;;;;;;;;;;ACFA,ycAAyc,wEAAwE,yGAAyG,SAAS,mMAAmM,8BAA8B,sHAAsH,4BAA4B,8GAA8G,6BAA6B,qHAAqH,4BAA4B,gHAAgH,gCAAgC,uHAAuH,+BAA+B,gFAAgF,4BAA4B,uHAAuH,2BAA2B,gHAAgH,gCAAgC,0HAA0H,+BAA+B,yvCAAyvC,uBAAuB,8JAA8J,2BAA2B,sBAAsB,iHAAiH,wBAAwB,+KAA+K,8BAA8B,iLAAiL,cAAc,sC;;;;;;;;;;;;ACAnlI;AAAe;AACbN,SAAO,EAAE;AACPY,aADO,qBACIX,OADJ,EACaY,KADb,EACqB;AAC1B,aAASZ,OAAO,CAACa,YAAR,IAAwB,OAAxB,GAAkC,OAAlC,GACEb,OAAO,CAACa,YAAR,IAAwB,OAAxB,GACED,KAAK,GAAG,WAAH,GAAiB,QADxB,GAEA,KAHX;AAID;AANM;AADI,CAAf,E","file":"2.js","sourcesContent":["import store from '../../lib/store';\nimport media_actions from '../../mixins/media-actions';\nexport default {\n  template: require( './template.html' ),\n  mixins: [ media_actions ],\n  props: {\n    title: {\n      type: String,\n      default: \"Episodes\"\n    },\n    episodes: {\n      type: Array,\n      default: () => []\n    },\n    showEmpty: {\n      type: Boolean,\n      default: true\n    },\n    coming: {\n      type: String,\n      default: ''\n    }\n  },\n  data () {\n    return {\n      user: store.state.user\n    };\n  },\n  computed: {\n    filteredEpisodes() {\n      return this.episodes.filter( x => this.canWatchNow(x) || x.restrictions.show );\n    },\n    dateComing() {\n      return this.coming ? ( 'in ' + this.coming ) : 'Soon';\n    }\n  },\n  methods: {\n    canWatchNow ( episode ) {\n      if ( this.user.as ) {\n        var as  = this.user.as;\n        var rst = episode.restrictions;\n        if ( as.admin || rst.public )\n          return true;\n        if ( as.subscriber && rst.members )\n          return true;\n        if ( as.logged_in && rst.auth )\n          return true;\n        return false;\n      }\n      return !episode.redirect;\n    },\n    needsSubscription ( episode ) {\n      return ( episode.restrictions.members\n               && ( !this.user.as || !this.user.as.subscriber ));\n    }\n  }\n};\n","module.exports = \"<section class=\\\"episodes\\\">\\n  <template v-if=\\\"filteredEpisodes.length || showEmpty\\\">\\n    <h2 class=\\\"title\\\" v-html=\\\"title\\\"></h2>\\n    <transition-group name=\\\"fade-fast\\\">\\n      <b-card v-for=\\\"( episode, index ) in filteredEpisodes\\\" :key=\\\"episode.id\\\">\\n        <b-media no-body>\\n          <b-media-aside>\\n            <b-img :src=\\\"episode.thumbnail\\\" width=\\\"128\\\" height=\\\"96\\\" />\\n            <div class=\\\"info length\\\">{{\\n              episode.media_details.length_formatted\\n              }}</div>\\n          </b-media-aside>\\n          <b-media-body>\\n            <h5 class=\\\"mt-0\\\">Programme {{ index }}</h5>\\n            <h5 class=\\\"mt-0\\\" v-html=\\\"episode.title.rendered\\\"></h5>\\n            <div class=\\\"info row\\\">\\n              <div :class=\\\"[ 'views', 'd-flex',\\n                           { active : episode.my_xp.seen }]\\\">\\n                <span class=\\\"dashicons dashicons-visibility\\\"></span>\\n                <span class=\\\"count\\\">{{ episode.stats.views || 0 }}</span>\\n              </div>\\n              <div :class=\\\"[ 'likes',  'd-flex',\\n                           { active: episode.my_xp.like }]\\\">\\n                <span class=\\\"dashicons dashicons-thumbs-up\\\"></span>\\n                <span class=\\\"count\\\">{{ episode.stats.likes || 0 }}</span>\\n              </div>\\n              <div :class=\\\"[ 'dislikes', 'd-flex',\\n                           { active: episode.my_xp.dislike }]\\\">\\n                <span class=\\\"dashicons dashicons-thumbs-down\\\"></span>\\n                <span class=\\\"count\\\">{{ episode.stats.dislikes || 0 }}</span>\\n              </div>\\n              <div :class=\\\"[ 'favs', 'd-flex', { active: episode.my_xp.fav }]\\\">\\n                <span class=\\\"dashicons dashicons-star-filled\\\"></span>\\n                <span class=\\\"count\\\">{{ episode.stats.favs || 0 }}</span>\\n              </div>\\n              <div :class=\\\"[ 'comments', 'd-flex',\\n                           { active: episode.my_xp.comment }]\\\">\\n                <span class=\\\"dashicons dashicons-admin-comments\\\"></span>\\n                <span class=\\\"count\\\">{{ episode.stats.comments || 0 }}</span>\\n              </div>\\n              <template v-if=\\\"user.as && user.as.admin\\\">\\n                <div v-if=\\\"episode.restrictions.private\\\"\\n                     class=\\\"d-flex admin\\\">private</div>\\n                <div v-if=\\\"episode.restrictions.public\\\"\\n                     class=\\\"d-flex admin\\\">public</div>\\n                <div v-if=\\\"episode.restrictions.auth\\\"\\n                     class=\\\"d-flex admin\\\">logged-in</div>\\n                <div v-if=\\\"episode.restrictions.payperview\\\"\\n                     class=\\\"d-flex admin\\\">payperview</div>\\n                <div v-if=\\\"episode.restrictions.members\\\"\\n                     class=\\\"d-flex admin\\\">subscribers</div>\\n                <div v-if=\\\"!episode.restrictions.show\\n                           && !episode.restrictions.public\\\"\\n                     class=\\\"d-flex admin\\\">hidden</div>\\n                <!-- <div v-if=\\\"episode.restrictions.premium\\\"\\n                     class=\\\"d-flex admin\\\">premium</div> -->\\n              </template>\\n            </div>\\n            <div v-html=\\\"episode.caption.rendered\\\"></div>\\n            <b-btn v-if=\\\"canWatchNow( episode )\\\" :to=\\\"episode.path\\\" size=\\\"lg\\\"\\n                   class=\\\"watch watch-now\\\" variant=\\\"primary\\\">\\n              {{ sayAction( episode )}} now</b-btn>\\n            <b-btn v-else-if=\\\"needsSubscription( episode )\\\" size=\\\"lg\\\"\\n                   :to=\\\"episode.preview\\n                        ||{ path: '/members', query: { then: episode.path }}\\\"\\n                   class=\\\"watch subscribe-to-watch\\\"\\n                   variant=\\\"warning\\\">subscribe to {{ sayAction( episode ) }}</b-btn>\\n            <b-btn v-if=\\\"episode.preview\\\" class=\\\"watch watch-preview\\\" size=\\\"lg\\\"\\n                   :to=\\\"episode.preview\\\" variant=\\\"link\\\">\\n              {{ sayAction( episode, true ) }} preview</b-btn>\\n          </b-media-body>\\n        </b-media>\\n      </b-card>\\n    </transition-group>\\n    <div class=\\\"message\\\" v-if=\\\"!filteredEpisodes.length\\\">Coming {{ dateComing }}!</div>\\n  </template>\\n</section>\\n\";","export default {\n  methods: {\n    sayAction( episode, trans ) {\n      return ( episode.release_type == 'video' ? 'watch'\n               : episode.release_type == 'audio'\n               ? ( trans ? 'listen to' : 'listen' )\n               : 'see' );\n    }\n  }\n};\n"],"sourceRoot":""}
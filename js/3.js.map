{"version":3,"sources":["webpack:///./js/components/comment-form/index.js","webpack:///./js/components/comment-form/template.html"],"names":["template","require","props","first","type","Boolean","default","methods","validEmail","email","re","test","toLowerCase","validate","commenterBlured","emailBlured","contentBlured","commenter","content","valid","submit","self","axios","post","author_name","author_email","author_url","website","$parent","id","then","response","submitted","catch","error","console","log","data"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACe;AACbA,UAAQ,EAAEC,mBAAO,CAAE,mEAAF,CADJ;AAEbC,OAAK,EAAE;AACLC,SAAK,EAAE;AACLC,UAAI,EAAEC,OADD;AAELC,aAAO,EAAE;AAFJ;AADF,GAFM;AAQbC,SAAO,EAAE;AACPC,cADO,sBACKC,KADL,EACa;AAClB,UAAIC,EAAE,GAAG,SAAT;AACA,aAAOA,EAAE,CAACC,IAAH,CAAQF,KAAK,CAACG,WAAN,EAAR,CAAP;AACD,KAJM;AAKPC,YALO,sBAKI;AAET,WAAKC,eAAL,GAAuB,IAAvB;AACA,WAAKC,WAAL,GAAmB,IAAnB;AACA,WAAKC,aAAL,GAAqB,IAArB;;AAEA,UAAI,KAAKC,SAAL,KAAmB,EAAnB,IACG,KAAKT,UAAL,CAAgB,KAAKC,KAArB,CADH,IAEG,KAAKS,OAAL,KAAiB,EAFxB,EAE2B;AACzB,aAAKC,KAAL,GAAa,IAAb;AACD;AACF,KAhBM;AAiBPC,UAjBO,oBAiBE;AACP,UAAIC,IAAI,GAAG,IAAX;AACAA,UAAI,CAACR,QAAL;;AACA,UAAGQ,IAAI,CAACF,KAAR,EAAc;AACZG,oDAAK,CAACC,IAAN,CAAY,yBAAZ,EAAuC;AACrCC,qBAAW,EAAGH,IAAI,CAACJ,SADkB;AAErCQ,sBAAY,EAAEJ,IAAI,CAACZ,KAFkB;AAGrCS,iBAAO,EAAOG,IAAI,CAACH,OAHkB;AAIrCQ,oBAAU,EAAIL,IAAI,CAACM,OAJkB;AAKrCJ,cAAI,EAAUF,IAAI,CAACO,OAAL,CAAaL,IAAb,CAAkB,CAAlB,EAAqBM;AALE,SAAvC,EAMGC,IANH,CAMQ,UAAUC,QAAV,EAAoB;AAC1BV,cAAI,CAACW,SAAL,GAAiB,IAAjB;AACD,SARD,EASIC,KATJ,CASU,UAAUC,KAAV,EAAiB;AACtBC,iBAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,SAXJ;AAYD;AACF,KAlCM,CAkCL;;AAlCK,GARI;AA4CbG,MA5Ca,kBA4CN;AACL,WAAO;AACLpB,eAAS,EAAQ,EADZ;AAELH,qBAAe,EAAE,KAFZ;AAGLL,WAAK,EAAY,EAHZ;AAILM,iBAAW,EAAM,KAJZ;AAKLY,aAAO,EAAU,EALZ;AAMLT,aAAO,EAAU,EANZ;AAOLF,mBAAa,EAAI,KAPZ;AAQLG,WAAK,EAAY,KARZ;AASLa,eAAS,EAAQ;AATZ,KAAP;AAWD;AAxDY,CAAf,E;;;;;;;;;;;ACDA,gcAAgc,uEAAuE,4QAA4Q,sEAAsE,wbAAwb,mEAAmE,sU","file":"3.js","sourcesContent":["import axios from 'axios';\nexport default {  \n  template: require( './template.html' ),\n  props: {\n    first: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    validEmail( email ) {\n      var re = /\\S+@\\S+/;\n      return re.test(email.toLowerCase());\n    },\n    validate() {       \n\n      this.commenterBlured = true;\n      this.emailBlured = true;\n      this.contentBlured = true;\n\n      if( this.commenter !== '' \n          && this.validEmail(this.email)\n          && this.content !== ''){\n        this.valid = true;\n      }\n    },\n    submit() {\n      var self = this;       \n      self.validate();     \n      if(self.valid){\n        axios.post( '/wp-json/wp/v2/comments', {\n          author_name:  self.commenter,\n          author_email: self.email,\n          content:      self.content, \n          author_url:   self.website, \n          post:         self.$parent.post[0].id\n        }).then(function (response) { \n          self.submitted = true;\n        })\n           .catch(function (error) {\n             console.log(error);\n           });\n      }\n    } //end submit\n  },\n  data() {\n    return {\n      commenter:       \"\", \n      commenterBlured: false,\n      email:           \"\", \n      emailBlured:     false,\n      website:         \"\", \n      content:         \"\", \n      contentBlured:   false,\n      valid:           false, \n      submitted:       false\n    };\n  }\n};\n","module.exports = \"<div class=\\\"comment-form-wrap\\\" v-cloak>\\n  <h3 v-if=\\\"first\\\">Be the first!</h3>\\n  <h3 v-else>Leave a comment</h3>\\n\\n  <div v-if=\\\"submitted\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n    Thank you. Your comment has been submitted!\\n  </div>\\n\\n  <div v-if=\\\"!submitted\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"commenter\\\">Name</label>\\n      <input\\n        v-model=\\\"commenter\\\"\\n        v-bind:class=\\\"{'form-control':true, 'is-invalid' : commenter == '' && commenterBlured}\\\"\\n        @blur=\\\"commenterBlured = true\\\">\\n      <div class=\\\"invalid-feedback\\\">This is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email address</label>\\n      <input\\n        v-model=\\\"email\\\"\\n        v-bind:class=\\\"{'form-control':true, 'is-invalid' : !validEmail(email) && emailBlured}\\\"\\n        @blur=\\\"emailBlured = true\\\">\\n      <div class=\\\"invalid-feedback\\\">A valid email is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"website\\\">Website <i>(optional)</i></label>\\n      <input v-model=\\\"website\\\" class=\\\"form-control\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"content\\\">Comment</label>\\n      <textarea\\n        v-model=\\\"content\\\"\\n        v-bind:class=\\\"{'form-control':true, 'is-invalid' : content == '' && contentBlured}\\\"\\n        @blur=\\\"contentBlured = true\\\"\\n        ></textarea>\\n      <div class=\\\"invalid-feedback\\\">This is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <a type=\\\"submit\\\" href=\\\"#\\\"\\n         @click.stop.prevent=\\\"submit\\\" class=\\\"btn btn-lg btn-success\\\">Submit</a>\\n    </div>\\n  </div>\\n</div>\\n\";"],"sourceRoot":""}
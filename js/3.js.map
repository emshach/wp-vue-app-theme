{"version":3,"sources":["webpack:///./js/components/mrk-carousel/index.js","webpack:///./js/components/mrk-carousel/template.html","webpack:///./js/mixins/media-actions.js"],"names":["carousels","template","require","mixins","media_actions","props","topic","type","String","default","slides","Array","id","background","interval","Number","data","loading","slide","sliding","mounted","getSlides","methods","onSlideStart","onSlideEnd","length","canWatchNow","episode","user","store","state","as","rst","restrictions","admin","public","subscriber","members","logged_in","auth","redirect","sayAction","trans","release_type"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA,IAAIA,SAAS,GAAG,CAAhB;AACe;AACbC,UAAQ,EAAEC,mBAAO,CAAE,mEAAF,CADJ;AAEbC,QAAM,EAAE,CAAEC,6DAAF,CAFK;AAGbC,OAAK,EAAE;AACLC,SAAK,EAAE;AACLC,UAAI,EAAEC,MADD;AAELC,aAAO,EAAE;AAFJ,KADF;AAKLC,UAAM,EAAE;AACNH,UAAI,EAAEI,KADA;AAENF,aAAO,EAAE;AAAA,eAAM,EAAN;AAAA;AAFH,KALH;AASLG,MAAE,EAAE;AACFL,UAAI,EAAEC,MADJ;AAEFC,aAAO,EAAE;AAAA,eAAM,cAAc,EAAET,SAAtB;AAAA;AAFP,KATC;AAaLa,cAAU,EAAE;AACVN,UAAI,EAAEC,MADI;AAEVC,aAAO,EAAE;AAFC,KAbP;AAiBLK,YAAQ,EAAE;AACRP,UAAI,EAAEQ,MADE;AAERN,aAAO,EAAE;AAFD;AAjBL,GAHM;AAyBbO,MAzBa,kBAyBN;AACL,WAAO;AACLC,aAAO,EAAE,IADJ;AAELC,WAAK,EAAE,CAFF;AAGLC,aAAO,EAAE,IAHJ,CAIL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAXK,KAAP;AAaD,GAvCY;AAwCbC,SAxCa,qBAwCH;AACR,SAAKC,SAAL;AACD,GA1CY;AA2CbC,SAAO,EAAE;AACPC,gBADO,wBACQL,KADR,EACgB;AACrB,WAAKC,OAAL,GAAe,IAAf;AACD,KAHM;AAIPK,cAJO,sBAIMN,KAJN,EAIc;AACnB,WAAKC,OAAL,GAAe,KAAf;AACD,KANM;AAOPE,aAPO,uBAOK;AACV,UAAI,CAAE,KAAKX,MAAL,CAAYe,MAAd,IAAwB,KAAKnB,KAAjC,EAAyC,CACvC;AACD;AACF;AAXM;AA3CI,CAAf,E;;;;;;;;;;;ACFA,iVAAiV,8BAA8B,2XAA2X,kBAAkB,0LAA0L,kBAAkB,mvC;;;;;;;;;;;;ACAx8B;AAAA;AAAA;AACe;AACbgB,SAAO,EAAE;AACPI,eADO,uBACOC,OADP,EACiB;AACtB,UAAIC,IAAI,GAAGC,yIAAK,CAACC,KAAN,CAAYF,IAAvB;;AACA,UAAKA,IAAI,CAACG,EAAV,EAAe;AACb,YAAIA,EAAE,GAAIH,IAAI,CAACG,EAAf;AACA,YAAIC,GAAG,GAAGL,OAAO,CAACM,YAAlB;AACA,YAAKF,EAAE,CAACG,KAAH,IAAYF,GAAG,CAACG,MAArB,EACE,OAAO,IAAP;AACF,YAAKJ,EAAE,CAACK,UAAH,IAAiBJ,GAAG,CAACK,OAA1B,EACE,OAAO,IAAP;AACF,YAAKN,EAAE,CAACO,SAAH,IAAgBN,GAAG,CAACO,IAAzB,EACE,OAAO,IAAP;AACF,eAAO,KAAP;AACD;;AACD,aAAO,CAACZ,OAAO,CAACa,QAAhB;AACD,KAfM;AAgBPC,aAhBO,qBAgBId,OAhBJ,EAgBae,KAhBb,EAgBqB;AAC1B,aAASf,OAAO,CAACgB,YAAR,IAAwB,OAAxB,GAAkC,OAAlC,GACEhB,OAAO,CAACgB,YAAR,IAAwB,OAAxB,GACED,KAAK,GAAG,WAAH,GAAiB,QADxB,GAEA,KAHX;AAID;AArBM;AADI,CAAf,E","file":"3.js","sourcesContent":["import media_actions from '../../mixins/media-actions';\nvar carousels = 0;\nexport default {\n  template: require( './template.html' ),\n  mixins: [ media_actions ],\n  props: {\n    topic: {\n      type: String,\n      default: \"\"\n    },\n    slides: {\n      type: Array,\n      default: () => []\n    },\n    id: {\n      type: String,\n      default: () => \"carousel-\" + ++carousels\n    },\n    background: {\n      type: String,\n      default: \"transparent\"\n    },\n    interval: {\n      type: Number,\n      default: 15000\n    }\n  },\n  data() {\n    return {\n      loading: true,\n      slide: 0,\n      sliding: null,\n      // options: {\n      //   pagination: {\n      //     direction: 'horizontal',\n      //     el: '.swiper-pagination',\n      //     speed: 15000,\n      //     loop: true\n      //   }\n      // }\n    };\n  },\n  mounted() {\n    this.getSlides();\n  },\n  methods: {\n    onSlideStart ( slide ) {\n      this.sliding = true;\n    },\n    onSlideEnd ( slide ) {\n      this.sliding = false;\n    },\n    getSlides() {\n      if (! this.slides.length && this.topic ) {\n        // TODO: search using topic, get posts\n      }\n    }\n  }\n};\n","module.exports = \"<carousel :autoplay=\\\"true\\\" :per-page=\\\"1\\\" :autoplay-timeout=\\\"15000\\\" :loop=\\\"true\\\"\\n          pagination-color=\\\"#000\\\" pagination-active-color=\\\"#fff\\\">\\n  <slide v-for=\\\"( slide, index ) in slides\\\" :key=\\\"slide.id\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div :class=\\\"[ 'col-12', { 'col-md-8': slide.show_text }]\\\">\\n          <template v-if=\\\"slide.type == 'attachment'\\\">\\n            <img v-if=\\\"slide.media_type == 'image'\\\" :src=\\\"slide.source_url\\\"\\n                 class=\\\"media\\\" />\\n            <video v-else-if=\\\"slide.mime_type.indexOf( 'video' ) == 0\\\"\\n                   :src=\\\"slide.source_url\\\" class=\\\"media\\\"\\n                   controls autoplay muted>\\n              {{ slide.alt_text }}\\n            </video>\\n            <audio v-else-if=\\\"slide.mime_type.indexOf( 'audio' ) == 0\\\"\\n                   :src=\\\"slide.source_url\\\" class=\\\"media\\\" controls>\\n              {{ slide.alt_text }}\\n            </audio>\\n          </template>\\n        </div>\\n        <div v-if=\\\"slide.show_text\\\" class=\\\"col-12 col-md-4\\\">\\n          <h2 v-if=\\\"slide.title\\\" v-html=\\\"slide.title.rendered\\\"></h2>\\n          <div v-if=\\\"slide.excerpt\\\" class=\\\"excerpt\\\"\\n               v-html=\\\"slide.excerpt.rendered\\\"></div>\\n          <div v-else-if=\\\"slide.caption\\\" class=\\\"caption\\\"\\n               v-html=\\\"slide.caption.rendered\\\"></div>\\n          <!-- <div v-if=\\\"slide.description\\\" class=\\\"description\\\" -->\\n          <!--      v-html=\\\"slide.description.rendered\\\"></div> -->\\n          <router-link v-if=\\\"slide.read_more\\\"\\n                       :to=\\\"slide.full_content.path\\\"\\n                       class=\\\"read-more\\\">read_more</router-link>\\n          <router-link v-else-if=\\\"slide.full_content\\\"\\n                       :to=\\\"slide.full_content.path\\\"\\n                       class=\\\"watch-now\\\">watch now</router-link>\\n        </div>\\n        <!-- TODO: if paid content, this link should be different, maybe it's\\n             own component -->\\n      </div>\\n    </div>\\n  </slide>\\n  <slide v-if=\\\"slides.length == 0\\\">\\n    <flower-spinner :animation-duration=\\\"2500\\\" :size=\\\"70\\\" color=\\\"#025\\\">\\n    </flower-spinner>\\n  </slide>\\n</carousel>\\n\";","import store from '../../lib/store';\nexport default {\n  methods: {\n    canWatchNow ( episode ) {\n      var user = store.state.user;\n      if ( user.as ) {\n        var as  = user.as;\n        var rst = episode.restrictions;\n        if ( as.admin || rst.public )\n          return true;\n        if ( as.subscriber && rst.members )\n          return true;\n        if ( as.logged_in && rst.auth )\n          return true;\n        return false;\n      }\n      return !episode.redirect;\n    },\n    sayAction( episode, trans ) {\n      return ( episode.release_type == 'video' ? 'watch'\n               : episode.release_type == 'audio'\n               ? ( trans ? 'listen to' : 'listen' )\n               : 'see' );\n    }\n  }\n};\n"],"sourceRoot":""}